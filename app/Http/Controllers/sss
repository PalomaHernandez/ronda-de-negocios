    public function endMatchingPhase(int $eventId)
    {
        // Buscar el evento por ID
        $event = Event::find($eventId);

        if (!$event) {
            return response()->json(['message' => 'Evento no encontrado'], 404);
        }
        // Calcular la diferencia en minutos entre starts_at y ends_at
        if ($event->starts_at && $event->ends_at) {
            $start = Carbon::parse($event->starts_at);
            $end = Carbon::parse($event->ends_at);

            // Calcular la diferencia en minutos
            $durationInMinutes = $start->diffInMinutes($end);
        } else {
            $durationInMinutes = null; // En caso de que no existan los atributos
        }

        // Definir las variables necesarias para el cálculo
        $meeting_duration = $event->meeting_duration;
        $time_between_meetings = $event->time_between_meetings; // Tiempo entre reuniones en minutos (puedes ajustarlo según sea necesario)

        // Verificar que durationInMinutes no sea nulo
        if ($durationInMinutes !== null) {
            // Calcular la cantidad de reuniones completas
            $AmmountOfMeetings = intdiv($durationInMinutes, $meeting_duration + $time_between_meetings); // División entera

            // Calcular el resto de la división
            $remainder = $durationInMinutes % ($meeting_duration + $time_between_meetings);

            // Si el resto es mayor o igual que la duración de la reunión, sumamos 1
            if ($remainder >= $meeting_duration) {
                $AmmountOfMeetings++;
            }
        } else {
            $AmmountOfMeetings = null; // En caso de que no se pueda calcular la duración
        }

        // Cambiar el estado del evento a "Terminada"
        $event->status = EventStatus::Ended;
        $event->save();

        // Cambiar el estado de las reuniones asociadas a "Terminada"
        $meetings = Meeting::where('event_id', $eventId)->get();

        foreach ($meetings as $meeting) {
            $meeting->assigned_table = 2; // Cambiar el estado a "Terminada"
            $meeting->save();
        }

        return response()->json([
            'message' => 'Fase de matching terminada correctamente.',
            'duration_in_minutes' => $durationInMinutes,
            'AmmountOfMeetings' => $AmmountOfMeetings
        ]);

    }